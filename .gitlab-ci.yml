.build_job:
  script: &build_job
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker pull "${BASE_IMAGE}:${PYTHON_VERSION}"

    - docker build --no-cache --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg PYTHON_VERSION=$PYTHON_VERSION -t "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}" .
    - docker push "$CI_REGISTRY_IMAGE:$OUTPUT_TAG_NAME"

    - docker build --no-cache --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg PYTHON_VERSION=$PYTHON_VERSION --build-arg GEOSPATIAL=true -t "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}-geospatial" .
    - docker push "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}-geospatial"



build_python35:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: python
    PYTHON_VERSION: "3.5"
    OUTPUT_TAG_NAME: "3.5"
  script: *build_job

build_python36:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: python
    PYTHON_VERSION: "3.6"
    OUTPUT_TAG_NAME: "3.6"
  script: *build_job

build_python37:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: python
    PYTHON_VERSION: "3.7"
    OUTPUT_TAG_NAME: "3.7"
  script: *build_job

build_python38:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: python
    PYTHON_VERSION: "3.8"
    OUTPUT_TAG_NAME: "3.8"
  script: *build_job



build_pypy36:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: pypy
    PYTHON_VERSION: "3-6"
    OUTPUT_TAG_NAME: "3.6-pypy"
  script: *build_job

build_pypy37:
  tags:
    - docker-compose
  variables:
    BASE_IMAGE: pypy
    PYTHON_VERSION: "3-7"
    OUTPUT_TAG_NAME: "3.7-pypy"
  script: *build_job
