variables:
  PLATFORMS: "linux/arm64/v8,linux/amd64"
  DOCKER_BUILDKIT: "1"

build:
  image: docker:latest
  services:
    - docker:dind

  before_script:
    # Experiment w/ qemu version
    - docker run --privileged --rm tonistiigi/binfmt --install all
    # End experiment

  script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker pull "${BASE_IMAGE}:${PYTHON_VERSION}" || true

    # Install QEMU emulation support in the kernel
    # See: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images
    - docker run --privileged --rm tonistiigi/binfmt --install all

    # Create a buildx instance if one doesn't already exist
    - if [ "$(docker buildx ls | grep docker-container  | wc -l)" -le "0" ]; then
        docker buildx create --use;
      fi

    - docker buildx build
        --platform "$PLATFORMS"
        --pull
        --build-arg BASE_IMAGE=$BASE_IMAGE
        --build-arg PYTHON_VERSION=$PYTHON_VERSION
        --build-arg MAXMIND_LICENSE_KEY=$MAXMIND_LICENSE_KEY
        --cache-from "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}"
        --tag "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}"
        --file $DOCKERFILE .
        --push

    - docker buildx build
        --platform "$PLATFORMS"
        --pull
        --build-arg BASE_IMAGE=$BASE_IMAGE
        --build-arg PYTHON_VERSION=$PYTHON_VERSION
        --build-arg MAXMIND_LICENSE_KEY=$MAXMIND_LICENSE_KEY
        --build-arg GEOSPATIAL=true
        --cache-from "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}"
        --tag "${CI_REGISTRY_IMAGE}:${OUTPUT_TAG_NAME}-geospatial"
        --file $DOCKERFILE .
        --push

  parallel:
    matrix:
      # Buster builds
      - BASE_IMAGE: python
        PYTHON_VERSION: "3.7-buster"
        OUTPUT_TAG_NAME: "3.7-buster"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.8-buster"
        OUTPUT_TAG_NAME: "3.8-buster"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.9-buster"
        OUTPUT_TAG_NAME: "3.9-buster"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.10-buster"
        OUTPUT_TAG_NAME: "3.10-buster"
        DOCKERFILE: "Dockerfile"

      # Bullseye builds
      - BASE_IMAGE: python
        PYTHON_VERSION: "3.7-bullseye"
        OUTPUT_TAG_NAME: "3.7"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.8-bullseye"
        OUTPUT_TAG_NAME: "3.8"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.9-bullseye"
        OUTPUT_TAG_NAME: "3.9"
        DOCKERFILE: "Dockerfile"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.10-bullseye"
        OUTPUT_TAG_NAME: "3.10"
        DOCKERFILE: "Dockerfile"

      # Slim builds
      - BASE_IMAGE: python
        PYTHON_VERSION: "3.7-slim-buster"
        OUTPUT_TAG_NAME: "3.7-slim"
        DOCKERFILE: "Dockerfile.slim"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.8-slim-buster"
        OUTPUT_TAG_NAME: "3.8-slim"
        DOCKERFILE: "Dockerfile.slim"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.9-slim-buster"
        OUTPUT_TAG_NAME: "3.9-slim"
        DOCKERFILE: "Dockerfile.slim"

      - BASE_IMAGE: python
        PYTHON_VERSION: "3.10-slim-buster"
        OUTPUT_TAG_NAME: "3.10-slim"
        DOCKERFILE: "Dockerfile.slim"
